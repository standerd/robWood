{"ast":null,"code":"import _slicedToArray from \"/Users/Dewald/Desktop/robWood/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Dewald/Desktop/robWood/src/components/CustomUpload/ImageUpload.js\";\nimport React from \"react\"; // used for making the prop types of this component\n\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\nimport defaultImage from \"assets/img/image_placeholder.jpg\";\nimport defaultAvatar from \"assets/img/placeholder.jpg\";\n\nfunction ImageUpload(props) {\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        file = _React$useState2[0],\n        setFile = _React$useState2[1];\n\n  const _React$useState3 = React.useState(props.avatar ? defaultAvatar : defaultImage),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        imagePreviewUrl = _React$useState4[0],\n        setImagePreviewUrl = _React$useState4[1];\n\n  const fileInput = React.createRef();\n\n  const handleImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      setFile(file);\n      setImagePreviewUrl(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  }; // const handleSubmit = e => {\n  // e.preventDefault();\n  // this.state.file is the file/image uploaded\n  // in this function you can save the image (this.state.file) on form submit\n  // you have to call it yourself\n  // };\n\n\n  const handleClick = () => {\n    fileInput.current.click();\n  };\n\n  const handleRemove = () => {\n    setFile(null);\n    setImagePreviewUrl(props.avatar ? defaultAvatar : defaultImage);\n    fileInput.current.value = null;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"fileinput text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleImageChange,\n    ref: fileInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"fileinput-new thumbnail img-raised\" + (props.avatar ? \" img-circle\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imagePreviewUrl,\n    alt: \"...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, file === null ? React.createElement(Button, {\n    className: \"btn-round\",\n    color: \"default\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.avatar ? \"Add Photo\" : \"Select image\") : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"btn-round\",\n    color: \"default\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Change\"), props.avatar ? React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) : null, React.createElement(Button, {\n    color: \"danger\",\n    className: \"btn-round\",\n    onClick: handleRemove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), \" Remove\"))));\n}\n\nImageUpload.propTypes = {\n  avatar: PropTypes.bool\n};\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/Dewald/Desktop/robWood/src/components/CustomUpload/ImageUpload.js"],"names":["React","PropTypes","Button","defaultImage","defaultAvatar","ImageUpload","props","useState","file","setFile","avatar","imagePreviewUrl","setImagePreviewUrl","fileInput","createRef","handleImageChange","e","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","handleClick","current","click","handleRemove","value","propTypes","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nimport { Button } from \"reactstrap\";\n\nimport defaultImage from \"assets/img/image_placeholder.jpg\";\nimport defaultAvatar from \"assets/img/placeholder.jpg\";\n\nfunction ImageUpload(props) {\n  const [file, setFile] = React.useState(null);\n  const [imagePreviewUrl, setImagePreviewUrl] = React.useState(\n    props.avatar ? defaultAvatar : defaultImage\n  );\n  const fileInput = React.createRef();\n  const handleImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.onloadend = () => {\n      setFile(file);\n      setImagePreviewUrl(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  // const handleSubmit = e => {\n  // e.preventDefault();\n  // this.state.file is the file/image uploaded\n  // in this function you can save the image (this.state.file) on form submit\n  // you have to call it yourself\n  // };\n  const handleClick = () => {\n    fileInput.current.click();\n  };\n  const handleRemove = () => {\n    setFile(null);\n    setImagePreviewUrl(props.avatar ? defaultAvatar : defaultImage);\n    fileInput.current.value = null;\n  };\n  return (\n    <div className=\"fileinput text-center\">\n      <input type=\"file\" onChange={handleImageChange} ref={fileInput} />\n      <div\n        className={\n          \"fileinput-new thumbnail img-raised\" +\n          (props.avatar ? \" img-circle\" : \"\")\n        }\n      >\n        <img src={imagePreviewUrl} alt=\"...\" />\n      </div>\n      <div>\n        {file === null ? (\n          <Button className=\"btn-round\" color=\"default\" onClick={handleClick}>\n            {props.avatar ? \"Add Photo\" : \"Select image\"}\n          </Button>\n        ) : (\n          <span>\n            <Button className=\"btn-round\" color=\"default\" onClick={handleClick}>\n              Change\n            </Button>\n            {props.avatar ? <br /> : null}\n            <Button color=\"danger\" className=\"btn-round\" onClick={handleRemove}>\n              <i className=\"fa fa-times\" /> Remove\n            </Button>\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nImageUpload.propTypes = {\n  avatar: PropTypes.bool\n};\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}